# Generated by Django 3.2.12 on 2024-06-21 12:21

import admission.models
import dirtyfields.dirtyfields
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('master_mgmt', '__first__'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.SmallIntegerField(choices=[(1, 'Admin'), (2, 'Teaching Staff'), (3, 'Student'), (4, 'Non Teaching Staff'), (5, 'Developer')], default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', admission.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RoleDetail',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_type', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student_Details',
            fields=[
                ('st_id', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('st_profile_pic', models.ImageField(default=False, upload_to='student/%Y/%m/%d')),
                ('st_uid', models.CharField(max_length=10, null=True, unique=True)),
                ('st_usn_old', models.CharField(max_length=10, null=True, unique=True)),
                ('st_usn_new', models.CharField(max_length=10, null=True, unique=True)),
                ('st_name', models.CharField(default=None, max_length=50)),
                ('adm_date', models.DateField(default=django.utils.timezone.now)),
                ('st_adm_applied', models.CharField(max_length=15, null=True)),
                ('st_medium', models.SmallIntegerField(choices=[(1, 'Non-Kannada'), (2, 'Kannada'), (3, 'Foreign National')], default=1)),
                ('st_dob', models.DateField(default=django.utils.timezone.now)),
                ('st_gender', models.SmallIntegerField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Others')], default=1)),
                ('st_locality', models.SmallIntegerField(choices=[(1, 'Urban'), (2, 'Rural')], default=1)),
                ('st_pob', models.CharField(max_length=30, null=True)),
                ('st_mother_tongue', models.CharField(max_length=15, null=True)),
                ('st_nationality', models.SmallIntegerField(choices=[(1, 'Indian'), (2, 'Other')], default=1)),
                ('st_caste', models.CharField(default='Hindu', max_length=15)),
                ('st_subcaste', models.CharField(max_length=15, null=True)),
                ('st_mobile_no', models.CharField(default='1234567890', max_length=13)),
                ('st_email_id', models.CharField(max_length=30, null=True)),
                ('st_aadhar_no', models.BigIntegerField(null=True)),
                ('st_extracurr_activity', models.CharField(max_length=400, null=True)),
                ('st_father_name', models.CharField(default='father', max_length=50)),
                ('st_mother_name', models.CharField(default='mother', max_length=50)),
                ('st_father_occupation', models.CharField(max_length=25, null=True)),
                ('st_mother_occupation', models.CharField(max_length=25, null=True)),
                ('st_father_income', models.BigIntegerField(default=500000)),
                ('st_mother_income', models.BigIntegerField(null=True)),
                ('st_father_mobile_no', models.CharField(default='1234567890', max_length=13)),
                ('st_mother_mobile_no', models.CharField(max_length=13, null=True)),
                ('st_father_pan', models.CharField(max_length=10, null=True)),
                ('st_mother_pan', models.CharField(max_length=10, null=True)),
                ('st_father_email_id', models.CharField(max_length=30, null=True)),
                ('st_mother_email_id', models.CharField(max_length=30, null=True)),
                ('st_parent_address', models.TextField(default='parent permanent address', max_length=200)),
                ('st_parent_address_city', models.CharField(default='Dharwad', max_length=30)),
                ('st_parent_address_district', models.CharField(default='Dharwad', max_length=30)),
                ('st_parent_address_pincode', models.CharField(default='580025', max_length=6)),
                ('st_postal_address', models.TextField(default='parent postal address', max_length=200)),
                ('st_postal_address_city', models.CharField(default='Dharwad', max_length=30)),
                ('st_postal_address_district', models.CharField(default='Dharwad', max_length=30)),
                ('st_postal_address_pincode', models.BigIntegerField(default=580025)),
                ('st_local_guardian_addr', models.CharField(max_length=200, null=True)),
                ('st_guardian_mobile_no', models.CharField(max_length=13, null=True)),
                ('st_health_issues', models.CharField(max_length=50, null=True)),
                ('st_guardian_email', models.CharField(max_length=30, null=True)),
                ('st_adm_date', models.DateField(default='2022-05-01')),
                ('st_total_fees', models.IntegerField(default=60000)),
                ('st_rt_no', models.CharField(max_length=50)),
                ('created_by', models.CharField(max_length=150, null=True)),
                ('created_time', models.DateTimeField(editable=False, null=True)),
                ('last_edited_by', models.CharField(max_length=150, null=True)),
                ('last_edited_time', models.DateTimeField(null=True)),
                ('st_acad_year', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='master_mgmt.academicyear')),
                ('st_adm_quota', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='master_mgmt.admission_quota')),
                ('st_bld_group', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='master_mgmt.bloodgroup')),
                ('st_branch_applied', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='master_mgmt.department')),
                ('st_category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='master_mgmt.category')),
                ('st_parent_address_state', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pstate', to='master_mgmt.states')),
                ('st_postal_address_state', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pstlstate', to='master_mgmt.states')),
                ('st_religion', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='master_mgmt.religion')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Privilege',
            fields=[
                ('pr_id', models.AutoField(primary_key=True, serialize=False)),
                ('pr_user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.roledetail')),
            ],
        ),
        migrations.CreateModel(
            name='Previous_Transfer_College_Details',
            fields=[
                ('ug_ptcd_id', models.AutoField(primary_key=True, serialize=False)),
                ('clg_trns_exam_type', models.IntegerField(null=True)),
                ('ug_ptcd_college_name', models.CharField(max_length=60, null=True)),
                ('ug_ptcd_admitted_sem', models.CharField(max_length=10, null=True)),
                ('ug_ptcd_credits_earned', models.IntegerField(null=True)),
                ('ug_ptcd_credits_remaining', models.IntegerField(null=True)),
                ('ug_ptcd_admitted_cgpa', models.FloatField(null=True)),
                ('clgtrns_st_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Previous_dip_Academic_Details',
            fields=[
                ('ug_pacad_dip_id', models.AutoField(primary_key=True, serialize=False)),
                ('ug_pacad_dip_board', models.CharField(max_length=20, null=True)),
                ('ug_pacad_dip_schoolname', models.CharField(max_length=60, null=True)),
                ('ug_pacad_dip_pass_month', models.CharField(max_length=10, null=True)),
                ('ug_pacad_dip_pass_year', models.CharField(max_length=4, null=True)),
                ('ug_pacad_dip_medium', models.CharField(max_length=15, null=True)),
                ('ug_pacad_dip_reg_no', models.CharField(max_length=15, null=True)),
                ('ug_pacad_dip_5th_marks', models.SmallIntegerField(null=True)),
                ('ug_pacad_dip_6th_marks', models.SmallIntegerField(null=True)),
                ('ug_pacad_dip_total_marks', models.SmallIntegerField(null=True)),
                ('ug_pacad_total_percentage', models.FloatField(null=True)),
                ('dip_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
                ('ug_pacad_dip_pass_state', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='master_mgmt.states')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Previous_Academic_Details_PG',
            fields=[
                ('pg_pacad_id', models.AutoField(primary_key=True, serialize=False)),
                ('pg_pacad_10th_board', models.CharField(default='KSEEB', max_length=20)),
                ('pg_pacad_10th_reg_no', models.CharField(default='123456789', max_length=15)),
                ('pg_pacad_10th_pass_month', models.CharField(default='January', max_length=10)),
                ('pg_pacad_10th_pass_year', models.CharField(default='2010', max_length=4)),
                ('pg_pacad_10th_total_marks_cgpa', models.FloatField(default=625)),
                ('pg_pacad_10th_percentage_cgpa', models.FloatField(default=10.0)),
                ('pg_pacad_10th_class_obtained', models.CharField(default='Distinction', max_length=20)),
                ('pg_pacad_12th_board', models.CharField(max_length=20, null=True)),
                ('pg_pacad_12th_reg_no', models.CharField(max_length=15, null=True)),
                ('pg_pacad_12th_pass_month', models.CharField(max_length=10, null=True)),
                ('pg_pacad_12th_pass_year', models.CharField(max_length=7, null=True)),
                ('pg_pacad_12th_total_marks', models.SmallIntegerField(null=True)),
                ('pg_pacad_12th_percentage', models.SmallIntegerField(null=True)),
                ('pg_pacad_12th_class_obtained', models.CharField(max_length=20, null=True)),
                ('pg_pacad_degree_university', models.CharField(default='VTU', max_length=60)),
                ('pg_pacad_degree_reg_no', models.CharField(default='2SD20CS000', max_length=15)),
                ('pg_pacad_degree_pass_month', models.CharField(default='January', max_length=10)),
                ('pg_pacad_degree_pass_year', models.CharField(default='2018', max_length=4)),
                ('pg_pacad_degree_percentage_cgpa', models.FloatField(default=600)),
                ('pg_pacad_be_percentage_5_8', models.FloatField(default=10.0)),
                ('pg_pacad_degree_class_obtained', models.CharField(default='Distinction', max_length=20)),
                ('pg_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Previous_12th_Academic_Details',
            fields=[
                ('ug_pacad_12th_id', models.AutoField(primary_key=True, serialize=False)),
                ('ug_pacad_12th_board', models.CharField(max_length=20, null=True)),
                ('ug_pacad_12th_schoolname', models.CharField(max_length=60, null=True)),
                ('ug_pacad_12th_pass_year', models.IntegerField(null=True)),
                ('ug_pacad_12th_medium', models.CharField(max_length=15, null=True)),
                ('ug_pacad_12th_reg_no', models.CharField(max_length=15, null=True)),
                ('ug_pacad_12th_total_marks', models.SmallIntegerField(null=True)),
                ('ug_pacad_12th_percentage', models.FloatField(null=True)),
                ('ug_pacad_12th_physics_marks', models.SmallIntegerField(null=True)),
                ('ug_pacad_12th_chemistry_marks', models.SmallIntegerField(null=True)),
                ('ug_pacad_12th_maths_marks', models.SmallIntegerField(null=True)),
                ('ug_pacad_12th_bio_cs_marks', models.SmallIntegerField(null=True)),
                ('ug_pacad_12th_pcm_total_marks', models.SmallIntegerField(null=True)),
                ('ug_pacad_12th_pcm_percentage', models.FloatField(null=True)),
                ('puc_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
                ('ug_pacad_12th_pass_month', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xiimonth', to='master_mgmt.months')),
                ('ug_pacad_12th_pass_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xiistate', to='master_mgmt.states')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Previous_10th_Academic_Details',
            fields=[
                ('ug_pacad_10th_id', models.AutoField(primary_key=True, serialize=False)),
                ('ug_pacad_10th_board', models.CharField(default='X-Board', max_length=20)),
                ('ug_pacad_10th_schoolname', models.CharField(default='X-School', max_length=60)),
                ('ug_pacad_10th_pass_year', models.IntegerField(default=2010)),
                ('ug_pacad_10th_medium', models.CharField(default='English', max_length=15)),
                ('ug_pacad_10th_reg_no', models.CharField(default='123456789012345', max_length=15)),
                ('ug_pacad_10th_total_marks_cgpa', models.FloatField(default=100.0)),
                ('ug_pacad_10th_percentage_cgpa', models.FloatField(default=100.0)),
                ('sslc_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
                ('ug_pacad_10th_pass_month', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='xmonth', to='master_mgmt.months')),
                ('ug_pacad_10th_pass_state', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='xstate', to='master_mgmt.states')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PGCET_Admission_Details_PG',
            fields=[
                ('pgcet_id', models.AutoField(primary_key=True, serialize=False)),
                ('pgcet_order_no', models.CharField(max_length=20, null=True)),
                ('pgcet_no', models.CharField(max_length=20, null=True)),
                ('pgcet_rank', models.IntegerField(null=True)),
                ('pgcet_cat_claimed', models.CharField(max_length=10, null=True)),
                ('pgcet_cat_allotted', models.CharField(max_length=10, null=True)),
                ('pgcet_allot_date', models.DateField(null=True)),
                ('pgcet_kea_fees_paid', models.IntegerField(null=True)),
                ('pgcet_college_fees_paid', models.IntegerField(null=True)),
                ('pgcet_total_fees_paid', models.IntegerField(null=True)),
                ('pgcet_challan_date', models.DateField(null=True)),
                ('pgcet_challan_no', models.IntegerField(null=True)),
                ('pgcet_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MGMT_Admission_Details_UG',
            fields=[
                ('mgmt_id', models.AutoField(primary_key=True, serialize=False)),
                ('mgmt_rank', models.IntegerField(null=True)),
                ('mgmt_exam', models.SmallIntegerField(choices=[(1, 'CET'), (2, 'COMEDK'), (3, 'CET/COMEDK')], null=True)),
                ('mgmt_college_fees_paid', models.IntegerField(null=True)),
                ('mgmt_challan_date', models.DateField(null=True)),
                ('mgmt_challan_no', models.IntegerField(null=True)),
                ('mgmt_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MGMT_Admission_Details_PG',
            fields=[
                ('mgmt_pg_id', models.AutoField(primary_key=True, serialize=False)),
                ('mgmt_pg_rank', models.IntegerField(null=True)),
                ('mgmt_exampg', models.SmallIntegerField(choices=[(5, 'PGCET')], null=True)),
                ('mgmt_pg_college_fees_paid', models.IntegerField(null=True)),
                ('mgmt_pg_challan_date', models.DateField(null=True)),
                ('mgmt_pg_challan_no', models.IntegerField(null=True)),
                ('mgmt_pg_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Lateralentry_Admission_Details_UG',
            fields=[
                ('dip_id', models.AutoField(primary_key=True, serialize=False)),
                ('dip_adm_order_no', models.CharField(max_length=20, null=True)),
                ('dip_dcet_no', models.CharField(max_length=10, null=True)),
                ('dip_rank', models.IntegerField(null=True)),
                ('dip_cat_claimed', models.CharField(max_length=10, null=True)),
                ('dip_cat_allotted', models.CharField(max_length=10, null=True)),
                ('dip_allot_date', models.DateField(null=True)),
                ('dip_fees_paid', models.IntegerField(null=True)),
                ('dip_college_fees_paid', models.IntegerField(null=True)),
                ('dip_total_fees_paid', models.IntegerField(null=True)),
                ('dip_challan_date', models.DateField(null=True)),
                ('dip_challan_no', models.IntegerField(null=True)),
                ('dip_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Document_Details',
            fields=[
                ('doc_ug_id', models.AutoField(primary_key=True, serialize=False)),
                ('alt_order_copy', models.IntegerField(default=1)),
                ('st_10th_marks_card', models.BooleanField(default=False)),
                ('st_dip_marks_card', models.BooleanField(default=False, null=True)),
                ('st_12th_marks_card', models.BooleanField(null=True)),
                ('st_degree_certificate', models.BooleanField(default=False, null=True)),
                ('st_study_cerfiticate', models.BooleanField(default=False)),
                ('st_income_certificate', models.BooleanField(default=False, null=True)),
                ('st_tulu_certificate', models.BooleanField(default=False, null=True)),
                ('st_eligibility_certificate', models.BooleanField(default=False, null=True)),
                ('st_migration_certificate', models.BooleanField(default=False, null=True)),
                ('st_transfer_certificate', models.BooleanField(default=False)),
                ('st_aadhar_card', models.BooleanField(default=False, null=True)),
                ('st_pan_card', models.BooleanField(default=False, null=True)),
                ('doc_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='COMEDK_Admission_Details_UG',
            fields=[
                ('comedk_id', models.AutoField(primary_key=True, serialize=False)),
                ('comedk_sl_no', models.CharField(max_length=15, null=True)),
                ('comedk_tat_no', models.CharField(max_length=15, null=True)),
                ('comedk_rank', models.BigIntegerField(null=True)),
                ('comedk_cat_allotted', models.CharField(max_length=10, null=True)),
                ('comedk_allot_date', models.DateField(null=True)),
                ('comedk_fees_paid', models.IntegerField(null=True)),
                ('comedk_college_fees_paid', models.IntegerField(null=True)),
                ('comedk_challan_date', models.DateField(null=True)),
                ('comedk_challan_no', models.IntegerField(null=True)),
                ('comedk_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CET_Admission_Details_UG',
            fields=[
                ('cet_id', models.AutoField(primary_key=True, serialize=False)),
                ('cet_order_no', models.CharField(max_length=20, null=True)),
                ('cet_no', models.CharField(max_length=20, null=True)),
                ('cet_rank', models.IntegerField(null=True)),
                ('cet_cat_claimed', models.CharField(max_length=10, null=True)),
                ('cet_cat_allotted', models.CharField(max_length=10, null=True)),
                ('cet_allot_date', models.DateField(null=True)),
                ('cet_kea_fees_paid', models.BigIntegerField(null=True)),
                ('cet_college_fees_paid', models.BigIntegerField(null=True)),
                ('cet_total_fees_paid', models.BigIntegerField(null=True)),
                ('cet_challan_date', models.DateField(null=True)),
                ('cet_challan_no', models.IntegerField(null=True)),
                ('cet_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Admission_Higher_Semester_Details',
            fields=[
                ('admit_higher_id', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('acad_cal_odd', models.CharField(max_length=7, null=True)),
                ('acad_cal_even', models.CharField(max_length=7, null=True)),
                ('semester', models.SmallIntegerField(default=3, unique=True)),
                ('admit_higher_fees', models.IntegerField(null=True)),
                ('admit_higher_challan_no', models.IntegerField(null=True)),
                ('dept_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='master_mgmt.department')),
                ('st_uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admission.student_details')),
            ],
            options={
                'unique_together': {('acad_cal_odd', 'acad_cal_even', 'semester', 'dept_id', 'st_uid')},
            },
        ),
    ]
